@page "/products/list-of-products"

@inject IProductService ProductService
@inject NavigationManager NavigationManager

<MudGrid Justify="Justify.Center">
    @if (Products is not null)
    {
        @if (Products.Any())
        {
            @foreach (var product in Products)
            {
                <ProductListItem Product="product" 
                    OnDetailsClick="(() => OnDetailsCLickHandler(product.ProductId))"
                    OnEditClick="(() => OnEditCLickHandler(product.ProductId))" 
                    OnDeleteClick="(() => OnDeleteCLickHandler(product.ProductId))"/>
            }
        }
        else
        {
            <EmptyList/>
        }
    }
    else
    {
        <NullList/>
    }
</MudGrid>

@code {
    #nullable disable

    [Parameter] public IEnumerable<ProductEntity> Products { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        var response = await ProductService.GetAll();

        if (response.IsSucceeded)
        {
            Products = JsonConvert.DeserializeObject<IEnumerable<ProductEntity>>(response.Result.ToString());
        }
    }

    public void OnEditCLickHandler(Guid id)
    {
        NavigationManager.NavigateTo($"/products/{id}/edit");
    }

    public void OnDetailsCLickHandler(Guid id)
    {
        NavigationManager.NavigateTo($"/products/{id}/details");
    }

    public void OnDeleteCLickHandler(Guid id)
    {
        NavigationManager.NavigateTo($"/products/{id}/delete");
    }
}
